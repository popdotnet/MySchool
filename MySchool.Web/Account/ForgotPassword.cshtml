@{
    Page.Title = "ForgotPassword";
    var sql = string.Empty;

    var username = Request["username"];

    //var email = Request["email"];


    if (IsPost)
    {
        bool isUserExist = false;

        if (username.IsEmpty())
        {
            ModelState.AddError("username", "You must provide a user name");
        }
        else
        {
            isUserExist = WebSecurity.UserExists(username);
            if(isUserExist ==false )
            {
                ModelState.AddError("username", "user name not Exist !");
            }
        }


        //if (email.IsEmpty())
        //{
        //    ModelState.AddError("email", "You must provide your email address");
        //}

        //if (!email.IsEmpty() && !Functions.IsValidEmail(email))
        //{
        //    ModelState.AddError("email", "Please provide a valid email address");
        //}


        if (!ModelState.IsValid)
        {
            ModelState.AddFormError(@"Please fix the errors below before resubmitting the form");
        }
        else
        {
            //var db = Database.Open("ConStr1");
            //var user = new { UserName = username, Email = email };
            var userBal = new UserBal();
            var userData = userBal.GetData(username);

            if(userData !=null )
            {
                try
                {
                    var token = WebSecurity.GeneratePasswordResetToken(username);
                    var hostUrl = Request.Url.GetComponents(UriComponents.SchemeAndServer, UriFormat.Unescaped);
                    var queryString = HttpUtility.UrlEncode(token);
                    var confirm = "~/Account/PasswordReset?confirmationCode=";
                    var confirmationUrl = hostUrl + VirtualPathUtility.ToAbsolute(confirm + queryString);
                    var message = "<p>Your confirmation code is: " + token + "</p>" +
                                  "<p>Visit <a href=\"" + confirmationUrl + "\">" +
                                  confirmationUrl + "</a>" +
                                  " to activate your account.</p>";

                    WebMail.Send(to: userData.Email, subject: "Please confirm your account", body: message, isBodyHtml: true);
                    //Roles.AddUsersToRoles(new[]{username}, new[]{"PowerUser"});
                    Response.Redirect("~/Account/Thanks");


                }
                catch (MembershipCreateUserException ex)
                {
                    if (ex.StatusCode == MembershipCreateStatus.DuplicateUserName)
                    {
                        ModelState.AddError("username", "That user name is already in use. Please choose another.");
                        ModelState.AddFormError(@"Please fix the errors below before resubmitting the form");
                    }
                    else
                    {
                        ModelState.AddFormError("Something went wrong. Please try again");
                    }

                }
            }

        }



    }
}




<form method="post">
    <fieldset>
        <legend>Forgot Password</legend>
        @Html.ValidationSummary(true)
        <div>
            <label for="username">Your User Name*</label>
        </div>
        <div>
            <input type="text" id="username" name="username" value="@username" />
            @Html.ValidationMessage("username")
        </div>
    
        @*<div>
            <label for="email">Email*</label>
        </div>
        <div>
            <input type="text" id="email" name="email" value="@email" />
            @Html.ValidationMessage("email")
        </div>*@
       
        <br />
        <div>
            <input type="submit" name="Submit" value="Submit" />
        </div>
    </fieldset>
</form>
