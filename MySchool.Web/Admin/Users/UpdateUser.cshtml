@{
    Page.Title = "Update User";


    var sql = string.Empty;

    UserBal userBal = new UserBal();
    List<UserEntity> userLst = userBal.GetList(WebSecurity.CurrentUserName);
    if (userLst != null)
    {

        userLst = userLst.OrderBy(u => u.UserName).ToList();

        UserEntity u2 = (from u in userLst where u.UserName.ToLower() == "control" select u).FirstOrDefault();
        if (u2 != null)
        {
            userLst.Remove(u2);
        }


    }



   

    var data = new UserEntity();

    var userId = Request["userId"];
    
    var email = Request["email"];
    var userName = Request["userName"];

    if (userId.AsInt() > 0)
    {

        if (IsPost)
        {

            if (userName.IsEmpty())
            {
                ModelState.AddError("userName", "Required");
            }
            else if (!userName.IsEmpty() && userId.AsInt() == WebSecurity.CurrentUserId && userName.ToLower() != WebSecurity.CurrentUserName.ToLower())
            {
                ModelState.AddError("userName", "Can not update user name for login account ");
            }

           

            if (email.IsEmpty())
            {
                ModelState.AddError("email", "You must provide person email address");
            }

            if (!email.IsEmpty() && !Functions.IsValidEmail(email))
            {
                ModelState.AddError("email", "Please provide a valid email address");
            }
            else
            {
                var db = Database.Open("ConStr1");
                sql = "SELECT Email FROM Users WHERE Email = @0 AND UserId <> @1";
                var emailDb = "";
                emailDb = db.QueryValue(sql, email, userId);

                if (!emailDb.IsEmpty())
                {
                    ModelState.AddError("email", "This email is taken by another user");
                }


            }


            if (ModelState.IsValid)
            {
                data.Email = email.ToString();
               
                data.Email = email.ToString();
                data.UserName = userName.ToString();
                userBal.Update(userId.AsInt(), data);

                //if (!userName.IsEmpty() && userId.AsInt() == WebSecurity.CurrentUserId && userName.ToLower() != WebSecurity.CurrentUserName.ToLower())
                //{
                //    WebSecurity.Logout();
                //}
                //else
                //{

                //}
                Response.Redirect(Request.RawUrl);

            }
        }
        else
        {
            data = userBal.GetData(userId.AsInt());
            if (data != null)
            {
               
                email = data.Email;
                userName = data.UserName;
            }

        }

    }

}

<form class="form-horizontal">
    <fieldset>
        <legend>Select User</legend>
        <div class="form-group">
            <div class="col-md-2 text-left">
                <label class="control-label " style="float:left;">Select User:</label>
            </div>
            <div class="col-md-2">
                <select name="userId" class="form-control" onchange="this.form.submit()">
                    <option value="">Pick one</option>
                    @if (userLst != null)
                    {
                        foreach (var itm in userLst)
                        {
                            <option value="@itm.UserId.ToString()" @Helpers.Selected("userId", itm.UserId.ToString())>@itm.UserName</option>
                        }

                    }

                </select>
            </div>
            <div class="col-md-6">
                @Html.ValidationMessage("userId")
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-default" style="float:right;">View Data</button>
            </div>
        </div>
    </fieldset>




</form>

<form method="post" class="form-horizontal">

    <fieldset>
        <legend>Update User</legend>
        <div class="form-group">
            <div class="col-md-2">
                <label for="userName">User Name</label>
            </div>
            <div class="col-md-6">
                <input type="text" id="userName" name="userName" class="form-control" value="@userName" maxlength="100" />

            </div>
            <div class="col-md-4">
                @Html.ValidationMessage("userName")
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-2">
                <label for="email">Email</label>
            </div>
            <div class="col-md-6">
                <input type="text" id="email" name="email" class="form-control" value="@email" placeholder="Enter Person Email Address" maxlength="100" />

            </div>
            <div class="col-md-4">
                @Html.ValidationMessage("email")
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-8">
                <button type="submit" class="btn btn-default" style="float:right;">Update</button>
            </div>
            <div class="col-md-4">

            </div>

        </div>

    </fieldset>
</form>
